#!/usr/bin/perl -w

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use Errno;
use esmith::ConfigDB;
use esmith::AccountsDB;
use NethServer::Directory;
use File::Path;

my $conf = esmith::ConfigDB->open_ro() || die("Could not open Config DB");
my $accounts = esmith::AccountsDB->open() || die("Could not open Accounts DB");
my $directory = NethServer::Directory->new() || die("Could not connect LDAP");
my $homeDirPrefix = '/var/lib/nethserver/home/';

my $errors = 0;

my $event = shift;
my $userName = shift;

if( ! defined ($userName)) {
    die "Username argument missing\n";
}

my $acct = $accounts->get($userName);
if( ! (defined $acct and $acct->prop('type') eq "user")) {
    die "Account $userName is not a user account; create user failed.\n";
}

my $lock = undef;
my $uid = $acct->prop('Uid');

# Generate a new uid if it is missing:
if( ! $uid) {
    use esmith::lockfile;
    $lock = esmith::lockfile::LockFileOrWait("/var/lib/nethserver/db/accounts");
    $uid = $accounts->get_next_uid;
    $acct->set_prop('Uid', $uid);
}

#
# If Gid prop is missing assume gid is equal to uid
#
my $gid = $acct->prop('Gid') || $uid;
my $shell = $acct->prop('Shell') || '/usr/libexec/openssh/sftp-server';

if( ! -x $shell) {
    warn "Given shell `$shell` is not executable";
    $shell = '/bin/false';
}

# Create the home directory prefix if still does not exists
if( ! -d $homeDirPrefix) {
    File::Path::make_path($homeDirPrefix);
}

# Create the user's unique group first
system(
	"/usr/sbin/lgroupadd",
	"-g",
	$gid,
	$userName
    ) == 0 or die "Failed to create user private group account `$userName`.\n";

# Now create the user account. `--surname` triggers inetOrgPerson
# schema in ldapEntry and is required for nethserver-directory to
# work.
system(
	"/usr/sbin/luseradd",
	"-u", $uid,
	"-g", $uid,
        '--surname', $userName,
	'-d', $homeDirPrefix . $userName,
	"-k", "/etc/skel/",
	"-s", $shell,
	$userName
    ) == 0 or die "Failed to create user account `$userName`.\n";

# Release lock if we have one
$lock && esmith::lockfile::UnlockFile($lock);

# Set initial permissions on user's root directory.
chmod 0700, $homeDirPrefix . $userName;

if(system('/usr/sbin/lusermod', '-L', $userName) != 0) {
    warn("Could not lock password for user `$userName`.\n");
    $errors ++;
}

$acct->set_prop('__state', 'new');

if( ! $directory->addGroupMembers($userName, $userName)) {
    warn "[ERROR] failed to set $userName as member of its primary group\n";
    $errors ++;
}

if( ! $directory->addGroupMembers('locals', $userName)) {
    warn "[ERROR] failed to add member to \"locals\" group\n";
    $errors ++;
}

exit ($errors == 0 ? 0 : 1);
