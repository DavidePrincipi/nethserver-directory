#!/usr/bin/perl -w

#
# Copyright (C) 2014 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# Copyright (C) 1999, 2000 e-smith, inc.
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::AccountsDB;
use esmith::ConfigDB;
use NethServer::Directory::LDAP;
use NethServer::Directory;

my $event = shift;

my $errors = 0;

my $accountsDb = esmith::AccountsDB->open_ro || die("Could not open AccountsDB.\n");
my $configDb = esmith::ConfigDB->open_ro || die("Could not open ConfigDB.\n");
my $ldap = NethServer::Directory::LDAP->new;
my $domain = NethServer::Directory::getInternalDomain();
my $base = NethServer::Directory::getInternalSuffix();

my $contactRecord = $configDb->get('OrganizationContact');

if( ! $contactRecord ) {
    warn("[ERROR] Could not open OrganizationContact record");
    exit(1);
}


my %accounts;

my $result = $ldap->search(
    base => "ou=People,$base",
    filter => "(objectClass=inetOrgPerson)",
    attributes => ['uid']
);
my @entries = $result->entries;
foreach my $entr ( @entries ) {
    my %attrs;
    my $uid = $entr->get_value ( 'uid' );
    $attrs{'telephoneNumber'} = $entr->get_value ( 'telephoneNumber' ) || $contactRecord->prop('PhoneNumber') || "";
    $attrs{'o'} = $entr->get_value ( 'o' ) || $contactRecord->prop('Company') || "";
    $attrs{'ou'} = $entr->get_value ( 'ou' ) || $contactRecord->prop('Department') || "";
    $attrs{'l'} = $entr->get_value ( 'l' ) || $contactRecord->prop('City') || "";
    $attrs{'street'} = $entr->get_value ( 'street' ) || $contactRecord->prop('Street') || "";
    $accounts{$uid} = \%attrs;
}

foreach my $userName (keys %accounts) {

    #------------------------------------------------------------
    # Update LDAP inetOrgPerson database entry.
    #------------------------------------------------------------

    my $attrs = $accounts{$userName};
    my $dn = "uid=$userName,ou=People,$base";

    my $result = $ldap->modify ($dn, replace => $attrs);
    if($result->is_error()) {
	warn("[ERROR] Failed to set contact info on entry `$dn`: " . $result->error) ;
	$errors ++;
	next;
    }    
}

exit($errors == 0 ? 0 : 1);
