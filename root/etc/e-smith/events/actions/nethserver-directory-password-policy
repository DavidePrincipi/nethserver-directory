#!/usr/bin/perl

#
# NethServer Directory
#
# Update user(s) chage informations according to the current password
# policy.
#
# If the userName argument is missing, all known user accounts are
# considered.
#
# Copyright (C) 2012 Nethesis srl
#
# --- 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License or more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#

use strict;
use esmith::ConfigDB;
use NethServer::Service;

my $event = shift || die "Event name argument missing.";
my $userName = shift;
my $PassExpires = shift || "yes";
my %users;

my $errors = 0;

my %conf = (esmith::ConfigDB->open_ro()->get('passwordstrength')->props()) or die("Could not read passwordstrength key");

if($conf{'PassExpires'} eq 'no') {
    # Global policy is non-expiring passwords: do not touch users
    %users = ();
} elsif($userName) {
    # Act on just one user record
    $userName =~ s/\@.+//;
    %users = ($userName => $PassExpires);
} else {
    # Change aging attributes where they are already set
    %users = split(/,/, qx(/usr/libexec/nethserver/list-users -s | jq -j 'to_entries | map(.key + "," + .value.expires) | join(",")'));
}

foreach my $ldapAccount (keys %users) {
    if($users{$ldapAccount} ne 'no') {
        system("/usr/sbin/lchage",
            "-m", $conf{"MinPassAge"} || '0',
            "-M", $conf{"MaxPassAge"} || '180',
            "-W", $conf{"PassWarning"} || '7',
            $ldapAccount);
        if( $? != 0 ) {
            warn "[ERROR] Cannot set password age infos for user `$ldapAccount`\n";
	        $errors++;
	    }
    } else {
        system(qw(/usr/sbin/lchage -m 0 -M 99999 -W 7), $ldapAccount);
        if( $? != 0 ) {
	        warn "[ERROR] Cannot remove password age infos for user `$ldapAccount`\n";
	        $errors++;
        }
    }
}

if(!$userName) {
    # Restart SSSD to pick up sssd.conf changes
    NethServer::Service->new('sssd')->restart() || ++$errors;
}

exit(($errors > 0) ? 1 : 0);
