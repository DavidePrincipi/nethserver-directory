#!/bin/bash

#
# Copyright (C) 2017 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

# Exit on error
set -e

function cleanup_acl ()
{
    # Clean up temporary props on nsdc service record:
    /sbin/e-smith/config delprop nsdc TCPPort access

    # Remove read access to everyone:
    ldapmodify -Y EXTERNAL -H ldapi:/// <<'EOF'
dn: olcDatabase={-1}frontend,cn=config
changetype: modify
replace: olcAccess
olcAccess: {0}to * by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=extern
 al,cn=auth" manage by * none
EOF
}

# Safety-check: has the nsdc IP been set?
if [[ -z $(/sbin/e-smith/config getprop nsdc IpAddress) ]]; then
    echo "[ERROR] nsdc IpAddress was not set. Cannot start nsdc container."
    exit 1
fi

yum --skip-broken --downloadonly -y --disableplugin=nethserver_events install nethserver-dc

# Drop this package
yum -y --disableplugin=nethserver_events remove nethserver-directory

# Clean up DB, like it has never been installed
/sbin/e-smith/config delete slapd
/sbin/e-smith/config setprop sssd LdapURI '' Provider none status disabled

# Clean up sssd configuration
/sbin/e-smith/signal-event nethserver-sssd-leave

# Install nethserver-dc without running runlevel-adjust and firewall-adjust:
# the slapd service must be running and its TCP port must be open
yum -y --disableplugin=nethserver_events install nethserver-dc

/sbin/e-smith/signal-event nethserver-dc-update

# Pre-select ns6upgrade provisioning procedure
/sbin/e-smith/config setprop nsdc ProvisionType ns6upgrade status enabled TCPPort 389 access green

# Grant read access to everyone (samba-tool provisioning procedure workaround):
ldapmodify -Y EXTERNAL -H ldapi:/// <<'EOF'
dn: olcDatabase={-1}frontend,cn=config
changetype: modify
replace: olcAccess
olcAccess: {0}to * by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=extern
 al,cn=auth" manage by * read
EOF

trap cleanup_acl ERR

/sbin/e-smith/signal-event nethserver-dc-save

# Update UPN fields
/etc/e-smith/events/actions/nethserver-dc-set-upn

BaseDN=$(perl -MNethServer::SSSD -e 'print NethServer::SSSD->new()->baseDN();')
LdapUri=ldaps://$(/sbin/e-smith/config getprop nsdc IpAddress)
KrbRealm=$(/sbin/e-smith/config getprop sssd Realm)
Domain=$(hostname -d)
Password='Nethesis,1234'
ServerRole=$(/sbin/e-smith/config getprop smb ServerRole)
LogonDrive=$(/sbin/e-smith/config getprop smb LogonDrive)
SystemName=$(hostname -s)

# Search for all users without (userPrincipalName already set
users=$(ldapsearch -D administrator@$KrbRealm -w $Password -H "${LdapUri}" -b $BaseDN '(&(!(objectClass=computer))(!(cn=krbtgt))(!(userPrincipalName=*))(objectClass=user))' cn \
       | grep "cn:" |  cut -d : -f 2 | sed 's/^\ //g')

# Add missing userPrincipalName attribute (only for upgrade from NS 6)
for user in $users
do
    echo "[NOTICE] Adding UPN to $user"
    ldapmodify -D administrator@$KrbRealm -w $Password -H "${LdapUri}" <<EOF
dn: cn=$user,cn=Users,$BaseDN
changetype: modify
add: userPrincipalName
userPrincipalName: $user@$Domain
EOF

    if [[ "${ServerRole}" == "PDC" ]]; then
        echo "[NOTICE] Set home drive ${LogonDrive} for $user to \\\\$SystemName\\$user"
        ldapmodify -D administrator@$KrbRealm -w $Password -H "${LdapUri}" <<EOF
dn: cn=$user,cn=Users,$BaseDN
changetype: modify
replace: homeDrive
homeDrive: $LogonDrive
-
replace: homeDirectory
homeDirectory: \\\\$SystemName\\$user
EOF
    fi
done

# Lock the administrator account
/etc/e-smith/events/actions/nethserver-dc-user-lock ${1:-ns6upgrade} "administrator@$(hostname -d)"

#
# If provisioning is OK, stop slapd and disable it at boot
#

if systemctl -q is-enabled slapd; then
    systemctl disable slapd
fi

cleanup_acl

if systemctl -q is-active slapd; then
    systemctl stop slapd
fi

